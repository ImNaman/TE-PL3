(defvar a)
(defvar b)
(defvar cnt)
(defvar ans1)
(defvar ans2)

(write-line "Enter two numbers:")
(setq a (read))
(setq b (read))
(setq cnt (integer-length b))

(defun add(a b)
(write-line "Addition:")
(write(+ a b))
(terpri)
)

(defun sub(a b)
(write-line "Subtraction:")
(write(- a b))
(terpri)
)

(defun div(a b)
(write-line "Division:")
(write-line "Quotient:")
(write(floor a b))
(terpri)
(write-line "Remainder:")
(write(rem a b))
(terpri)
)

(defun mul1(a b)
(setq ans1 0)
(if(= 1 (logand b 1))
	(setq ans1 (+ ans1 a))
)

)
(defun mul2(a b)
	(setq ans2 0)
	(loop for i from 2 to cnt do
		(setq a (ash a 1))
		(setq b (ash b -1))
		(if(= 1 (logand b 1))
		(setq ans2 (+ ans2 a))
		)
	)
(write-line "Product:")
(write(+ ans1 ans2))
(terpri)
)

(sb-thread:make-thread(lambda() (add a b)))
(sb-thread:make-thread(lambda() (sub a b)))
(sb-thread:make-thread(lambda() (div a b)))
(progn
(sb-thread:make-thread(lambda() (mul1 a b)))
(sb-thread:make-thread(lambda() (mul2 a b)))
)
